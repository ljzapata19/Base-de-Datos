-- Dataset: 62414bd8eaf6ea30b329c838c565cca9
-- Ejercicio 1 : traer informacion de todos los prestamos relaizados en la sucursal MERIDA
σ nombresucursal = 'MERIDA' (prestamo ⨝ sucursal) 
-- Ejercicio 2: Determinar el nombre de los clientes que viven en OAXACA
π nombrecliente σ estado = 'OAXACA' cliente
-- Ejercicio 3: Nombre de todos los clientes del banco que tiene una cuenta, un prestamo o ambas. (Usando operadores de conjuntos)
π nombrecliente (cliente ⨝ (ctacliente ∪ prestatario))
-- Ejercicio 4: Relacion de los clientes que tienen abierta una cuenta, pero no tienen ninguna de credito (prestamo). (Operador de resta o Diferencia de conjunto)
cliente ⨝ (π idcliente ctacliente - π idcliente prestatario)
-- Si ademas de los datos del cliente queremos el nro de cuenta debemos usar el join externo, estos se usan para poder encontrar informacion faltante
ctacliente ⨝ prestatario -- trae clientes q tienen cuenta y prestamo
ctacliente ⟕ prestatario -- trae clientes q tienen cuenta, y pueden o no tener prestamo (se usa el left outer join, ya que puede tener null en prestatario)
ctacliente ⟖ prestatario -- trae clientes q tienen prestamo, y pueden o no tener cuenta (se usa el right outer join, ya que puede tener null en cuenta)
-- Ahora si en el ejercicio si queremos q tengan cuenta pero no prestamo
π nombrecliente, numcta (cliente ⨝((ctacliente ⟕ prestatario) - (ctacliente ⨝ prestatario)))
-- Ejercicio 5: Todos los clientes que tienen un prestamos y una cuenta abierta.
cliente ⨝ (π idcliente ctacliente ∩ π idcliente prestatario)
-- Ejercicio 6: Nombre de todos los clientes que tienen un crédito en la sucursal TULUM
π idcliente, nombrecliente cliente ⨝ (prestatario ⨝ prestamo ⨝ σ nombresucursal = 'TULUM' sucursal)
-- Ejercicio 7: Nombre de todos los clientes que tienen un prestamo y el importe del mismo.
π nombrecliente, importe (cliente ⨝ prestatario ⨝ prestamo)
